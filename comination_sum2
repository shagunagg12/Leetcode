class Solution {
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> ans= new ArrayList<>();
        Arrays.sort(candidates);
        solve(0,ans,candidates,target,new ArrayList<>());

        return ans;
        

        
    }
    private void solve(int idx,  List<List<Integer>> ans,int[] candidates, int target,List<Integer> cur){

      
            if(target==0){
                ans.add(new ArrayList<>(cur));
            
            
            return;
            }
        

        for(int i=idx;i<candidates.length;i++){
            if(i>idx && candidates[i]==candidates[i-1])
            continue;
            

        

        if(candidates[i]>target)
        break;
            cur.add(candidates[i]);
          
            solve(i+1,ans,candidates,target-candidates[i],cur);
            cur.remove(cur.size()-1);
        

        }
        

    }
}