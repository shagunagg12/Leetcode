/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        Queue<TreeNode> q= new LinkedList<>();
        boolean lefttoright=true;
        if(root==null)
        return ans;
        q.add(root);
        while(!q.isEmpty()){
            int size= q.size();
            List<Integer> curlevel= new ArrayList<>();
            for(int i=0;i<size;i++){
                TreeNode cur= q.poll();
                if(lefttoright==true)
                curlevel.addLast(cur.val);
                else 
                curlevel.addFirst(cur.val);

                if(cur.left!=null)
                q.add(cur.left);
                if(cur.right!=null)
                q.add(cur.right);

                

            }
            ans.add(curlevel);
            lefttoright=!lefttoright;
        }
        return ans;
        
    }
}